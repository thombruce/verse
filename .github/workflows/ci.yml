name: CI

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

env:
  rust: 1.73.0

jobs:
  # Build for Linux
  release-linux:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}

    steps:
      - uses: actions/checkout@v3
        # with:
        #   lfs: 'true'

      # https://github.com/actions/checkout/issues/165#issuecomment-657673315
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1
      - name: Git LFS Pull
        run: git lfs pull

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust }}
          targets: x86_64-unknown-linux-gnu
      - name: install dependencies
        run: |
          sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - name: Build
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu

  # Build for Windows
  release-windows:
    runs-on: windows-latest
    if: ${{ !github.event.pull_request.draft }}

    steps:
      - uses: actions/checkout@v3
        # with:
        #   lfs: 'true'

      # https://github.com/actions/checkout/issues/165#issuecomment-657673315
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1
      - name: Git LFS Pull
        run: git lfs pull

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust }}
          targets: x86_64-pc-windows-msvc

      - name: Build
        run: |
          cargo build --release --target x86_64-pc-windows-msvc

  # Build for macOS
  release-macos:
    runs-on: macOS-latest
    if: ${{ !github.event.pull_request.draft }}

    steps:
      - uses: actions/checkout@v3
        # with:
        #   lfs: 'true'

      # https://github.com/actions/checkout/issues/165#issuecomment-657673315
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1
      - name: Git LFS Pull
        run: git lfs pull

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust }}
          targets: x86_64-apple-darwin
      - name: Environment Setup
        run: |
          export CFLAGS="-fno-stack-check"
          export MACOSX_DEPLOYMENT_TARGET="10.9"

      - name: Build
        run: |
          cargo build --release --target x86_64-apple-darwin
